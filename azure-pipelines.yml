trigger:
- test-1

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python310:
      python.version: '3.10'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

# Zip the Python package
- script: |
    zip -r stock-trader.zip .
  displayName: 'Zip the Python package'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.SourcesDirectory)/stock-trading.zip'
    artifactName: 'stock-trading'
    publishLocation: 'Container'
  displayName: 'Publish Artifact: stock-trading'

- script: |
    echo "Variable Value: $(AWS_DEFAULT_REGION)"
  displayName: 'Log AWS_DEFAULT_REGION'

- script: |
    pip install awscli
    aws lambda update-function-code --function-name trading-lambda --zip-file fileb://$(Build.SourcesDirectory)/stock-trader.zip
  displayName: 'Deploy to AWS Lambda'
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    AWS_DEFAULT_REGION: $(AWS_DEFAULT_REGION)
    AWS_SESSION_TOKEN : $(AWS_SESSION_TOKEN)


#- script: |
#    terraform --version
#  displayName: 'Check Terraform Version'
#
#- script: |
#    # Install Terraform (if not already installed)
#    curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
#    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list > /dev/null
#    sudo apt-get update && sudo apt-get install terraform
#
#    # Initialize Terraform
#    cd tf
#    terraform init -reconfigure
#  displayName: 'Initialize Terraform'
#
#- script: |
#    # Plan Terraform changes
#    cd tf
#    terraform plan -var-file "env/common.tfvars" -var-file "env/dev/us-east-2.tfvars"  -out activity.tfplan
#  displayName: 'Terraform Plan'
#
#- script: |
#    # Apply Terraform changes
#    cd tf
#    terraform apply activity.tfplan
#  displayName: 'Terraform Apply'
#  condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
